#!/bin/bash

CONTAINER_CONFIG_DIR="/etc/containerconf"
USER_CONTAINER_CONFIG_DIR="$CONTAINER_CONFIG_DIR/$USER"
CONTAINER_LIST_FILE="$CONTAINER_CONFIG_DIR/configs.d/list.txt"
CONTAINER_OVERRIDE_CONFIG="$HOME/.config/containerconf.d/override.conf"

help() {
  cat <<EOF 
Usage: cherry <subcommand> [option]

Subcommands:
  stem                        baseOS commands
  branch                      containerOS commands
  bootc                       wrapper for bootc
  version                     show program version
  help                        show this dialogue
EOF
}

os-help() {
  cat <<EOF
Usage: cherry stem [option]

Options:
  exec                        run a command on the host
  shell                       open a shell ont he host (/bin/sh)
  help                        show this dialogue
EOF
}

contaienr-help() {
  cat <<EOF
Usage: cherry branch [option]

Options:
  new                         create a new container
  rm                          remove an existing container
  switch                      switch to a different container
  help                        show this dialogue
EOF
}

version() {
  echo "cherry v1.2.3-beta"
}

new() {
  read -p "Do you want to (1) choose from a list of images, or (2) specify your own (advanced)? 1/2: " container_new_choice

  case "$container_new_choice" in
    1)
      echo "Choose a container to create:"
      cat "$CONTAINER_LIST_FILE"
      read -p "> " container_new_choice_config
      distrobox-assemble create --file "${container_new_choice_config}.ini"
      echo "Container created."
      ;;
    2)
      read -p "Container URL: " manual_container_url
      read -p "Container name: " manual_container_name
      read -p "Extra flags to pass to 'distrobox-create'. Optional. > " manual_container_flags
      distrobox-create --pull --image "$manual_container_url" --name "branch-$manual_container_name" $manual_container_flags
      echo "Container created!"
      ;;
    *)
      echo "Invalid choice."
      exit 1
      ;;
  esac
}

rm() {
  read -p "Are you sure you want to do this? y/n: " rm_confirm
  if [[ "$rm_confirm" == "y" ]]; then
    echo "Input the container to remove."
    echo "Containers:"
    distrobox-list
    read -p "> " container_name_rm
    if [[ "$container_name_rm" == "cherry-cli" ]]; then echo "You cannot delete the default container!" && exit 1; fi
    distrobox-rm "$container_name_rm"
  else
    echo "Cancelling."
    exit 1
  fi
}

switch() {
  echo "Input the container to switch to."
  echo "Containers:"
  distrobox-list
  read -p "> " container_name_switch
  echo "$container_name_switch" > "$CONTAINER_OVERRIDE_CONFIG"
  echo "Switch complete. Reopen this terminal to open your new container."
  echo "Note that it may take a second for the container to start."
}

os-exec() {
  "$@"
}

os-shell() {
  clear
  echo "You are running a shell on the HOST SYSTEM! Proceed with caution."
  /bin/sh
}

container-menu() {
  case "$1" in
    new)
      new
      ;;
    rm)
      shift
      rm "$@"
      ;;
    switch)
      switch
      ;;
    *)
      help
      exit 1
      ;;
  esac
}

os-menu() {
  case "$1" in
    exec)
      shift
      os-exec
      ;;
    shell)
      os-shell
      ;;
    *)
      help
      exit 1
      ;;
  esac
}

case "$1" in
  stem)
    shift
    os-menu "$@"
    ;;
  branch)
    shift
    container-menu "$@"
    ;;
  bootc)
    shift
    bootc "$@"
    ;;
  version)
    version
    ;;
  help)
    help
    ;;
  *)
    help
    exit 1
    ;;
esac
