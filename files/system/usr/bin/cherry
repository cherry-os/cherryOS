#!/bin/bash

CONTAINER_CONFIG_DIR="/etc/containerconf"
USER_CONTAINER_CONFIG_DIR="$CONTAINER_CONFIG_DIR/$USER"
CONTAINER_LIST_FILE="$CONTAINER_CONFIG_DIR/configs.d/.cherry/list.txt"
CONTAINER_OVERRIDE_CONFIG="$HOME/.config/containerconf.d/override.conf"
FILENAME_TMP=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 35 ; echo '')
PS3="> "

help() {
  cat <<EOF 
Usage: cherry <subcommand> [option]

Subcommands:
  stem                        baseOS commands
  branch                      containerOS commands
  pesticide                   FSguard commands
  version                     show program version
  help                        show this dialogue
EOF
}

os-help() {
  cat <<EOF
Usage: cherry stem [option]

Options:
  roots                       run a command on the host system
  grow                        upgrade the host system and related utils
  status                      show the status of the host system
  help                        show this dialogue
EOF
}

container-help() {
  cat <<EOF
Usage: cherry branch [option]

Options:
  grow                        create a new container
  snap                        remove an existing container
  jump <container_name>       switch to a different container
  help                        show this dialogue
EOF
}

pesticide-help() {
  cat <<EOF
Usage: cherry pesticide [option]

Options:
  status                      show the status of enrolled directories
  check                       check the integrity of enrolled directories
  apply                       enroll a new directory
  help                        show this dialogue
EOF
}

version() {
  echo "cherry v2.0.0"
}

status() {
  cat <<EOF
bourbonOS $(cat /etc/bourbonOS-version)
pesticide: $(/usr/libexec/pesticide/status) $(/usr/libexec/pesticide/version)
=======================
host: $(hostname)
kargs: $(cat /proc/cmdline)
kernver: $(uname -r)
=======================
current container: $(cat "$CONTAINER_OVERRIDE_CONFIG")
containers:
$(distrobox-list | awk '{print $3}' | grep -v -e '^NAME$' -e '^cherry-cli$')
=======================
ostree status:
$(bootc status)
EOF
}

new_container() {
  echo "Do you want to:"
  select container_new_choice in "Choose from a list of images" "Specify your own (advanced)"; do
    case $REPLY in
      1|2) break ;;
      *) echo "Invalid choice. Please select 1 or 2." ;;
    esac
  done
  case "$container_new_choice" in
    1)
      echo "Select an image from the list:"
      select image in $(cat "$CONTAINER_LIST_FILE"); do
        if [[ -n "$image" ]]; then
          distrobox-assemble create --file /etc/containerconf/configs.d/$image.ini
          echo "Done! You can switch to the container using 'cherry branch switch'."
          break
        else
          echo "Invalid selection."
          exit 1
        fi
      done
      ;;
    2)
      read -p "Container URL/alias: " manual_container_url
      read -p "Container name: " manual_container_name
      echo "An editor will open to allow you to specify additional options."
      echo "If you do not know how to specify additional options in the editor,"
      echo "Please type the word help and press enter."
      echo "When you're done looking at the help file, press q to exit."
      echo "Then, reselect 'Specify your own (advanced)' to continue."
      echo "If you don't need help, just press enter."
      read -p container_help_var "> "
      if [[ "$container_help_var" == "help" ]]; then
        less /etc/containerconf/configs.d/.cherry/editor-syntax.txt
        new_container
      else
        cp /etc/containerconf/configs.d/.ini-template /tmp/$FILENAME_TMP.ini
        sed -i "s/<name>/$manual_container_name/g" /tmp/$FILENAME_TMP.ini
        sed -i "s/<url>/$manual_container_url/g" /tmp/$FILENAME_TMP.ini
        nano /tmp/$FILENAME_TMP.ini
        distrobox-assemble create --file /tmp/$FILENAME_TMP.ini
        rm /tmp/$FILENAME_TMP.ini
      fi
      echo "Done! You can switch to the container using 'cherry branch switch'."
      ;;
    *)
      echo "Invalid choice."
      exit 1
      ;;
  esac
}

remove_container() {
  if [[ -z $(distrobox-list | awk '{print $3}' | grep -v -e '^NAME$' -e '^cherry-cli$') ]]; then
    echo "No containers to remove."
    exit 1
  else
    echo "Select a container by its number to remove it."
    select container in $(distrobox-list | awk '{print $3}' | grep -v -e '^NAME$' -e '^cherry-cli$'); do
      if [[ -n "$container" ]]; then
        distrobox-rm $container
        break
      else
        echo "Invalid selection."
        exit 1
      fi
    done
  fi
}

switch_container() {
  if [[ -z $(distrobox-list | awk '{print $3}' | grep -v -e '^NAME$' -e '^cherry-cli$') ]]; then
    echo "No containers to switch to."
    exit 1
  else
    echo "Select a container by its number to switch to it."
    select container in $(distrobox-list | awk '{print $3}' | grep -v '^NAME$' | sed 's/^cherry-cli$/default container/'); do
      if [[ -n "$container" ]]; then
        exec distrobox-enter $container -- bash
      else
        echo "Invalid selection."
        exit 1
      fi
    done
  fi
}

os_exec() {
  "$@"
}

os_upgrade() {
  clear
  topgrade
}

case "$1" in
  stem)
    shift
    case "$1" in
      roots)
        shift
        os_exec "$@"
        ;;
      grow)
        os_upgrade
        ;;
      status)
        status
        ;;
      help)
        os-help
        ;;
      *)
        os-help
        exit 1
        ;;
    esac
    ;;
  branch)
    shift
    case "$1" in
      grow)
        new_container
        ;;
      snap)
        shift
        remove_container "$@"
        ;;
      jump)
        switch_container
        ;;
      help)
        container-help
        ;;
      *)
        container-help
        exit 1
        ;;
    esac
    ;;
  pesticide)
    shift
    case "$1" in
      status)
        /usr/libexec/pesticide/status
        ;;
      check)
        /usr/libexec/pesticide/check
        ;;
      apply)
        shift
        /usr/libexec/pesticide/enroll "$@"
        ;;
      help)
        pesticide-help
        ;;
      *)
        pesticide-help
        exit 1
        ;;
    esac
    ;;
  version)
    version
    ;;
  help)
    help
    ;;
  *)
    help
    exit 1
    ;;
esac